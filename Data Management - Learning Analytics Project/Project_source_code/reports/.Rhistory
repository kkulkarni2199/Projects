knitr::opts_chunk$set(echo = FALSE, warning=FALSE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ggplot2)
library(ProjectTemplate)
load.project()
learner_count = merged_enroll_data_2 %>%
group_by(run_number) %>%
summarise(num_learners = n())
learner_count
head(filtered_enroll_data, 5)
ggplot(data = filtered_enroll_data, aes(x = factor(run_number))) +
geom_bar(stat = "count", fill = "#b3e2cd", color = "black") +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5, size = 3) +
labs(title = "Number of Learners in each run",
x = "Run Number",
y = "Number of Learners") +
theme_minimal()
ggplot(data = filtered_enroll_data, aes(x = factor(run_number), fill = gender)) +
geom_bar(position = "dodge") +
geom_text(stat = "count", aes(label = ..count.., group = gender), position = position_dodge(width = 0.9), vjust = -0.5, size = 3) +
labs(title = "Number of Learners according to Gender",
x = "Run Number",
y = "Number of Learners",
fill = "Gender") +
theme_minimal()
ggplot(data = filtered_enroll_data, aes(x = factor(run_number), fill = age_range)) +
geom_bar(position = "stack") +
labs(title = "Learners in Age Ranges for each Run",
x = "Run Number",
y = "Number of Learners",
fill = "Age Range") +
theme_minimal()
ggplot(data = top_countries_data, aes(x = factor(run_number), y = learner_count, fill = country)) +
geom_bar(position = "stack", stat = "identity") +
geom_text(aes(label = learner_count), position = position_stack(vjust = 0.5), size = 3, color = "black") +
labs(title = paste("Top", top_countries, "Countries by Learner Count in Each Run"),
x = "Run Number",
y = "Number of Learners",
fill = "Country") +
theme_minimal()
leaving_count = merged_leaving_data %>%
group_by(run_number) %>%
summarise(learners_left = n())
leaving_count
head(filtered_leaving_data)
ggplot(reason_freq, aes(x = run_number, y = leaving_reason, fill = count)) +
geom_tile() +
scale_fill_gradient(low = "lightblue", high = "darkblue") +
theme_classic()
ggplot(data = filtered_employee_data, aes(x = factor(run_number), fill = employment_status)) +
geom_bar(position = "dodge") +
labs(title = "Employment status of learners of each run",
x = "Run Number",
y = "Number of Learners",
fill = "Employment status") +
theme_bw()
load("D:/Projects/Data Management - Learning Analytics Project/Project_source_code/.RData")
gc()
load("D:/Projects/Data Management - Learning Analytics Project/Project_source_code/.RData")
gc()
knitr::opts_chunk$set(echo = FALSE, warning=FALSE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ggplot2)
library(ProjectTemplate)
load.project()
learner_count = merged_enroll_data_2 %>%
group_by(run_number) %>%
summarise(num_learners = n())
learner_count
head(filtered_enroll_data, 5)
ggplot(data = filtered_enroll_data, aes(x = factor(run_number))) +
geom_bar(stat = "count", fill = "#b3e2cd", color = "black") +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5, size = 3) +
labs(title = "Number of Learners in each run",
x = "Run Number",
y = "Number of Learners") +
theme_minimal()
ggplot(data = filtered_enroll_data, aes(x = factor(run_number), fill = gender)) +
geom_bar(position = "dodge") +
geom_text(stat = "count", aes(label = ..count.., group = gender), position = position_dodge(width = 0.9), vjust = -0.5, size = 3) +
labs(title = "Number of Learners according to Gender",
x = "Run Number",
y = "Number of Learners",
fill = "Gender") +
theme_minimal()
ggplot(data = filtered_enroll_data, aes(x = factor(run_number), fill = age_range)) +
geom_bar(position = "stack") +
labs(title = "Learners in Age Ranges for each Run",
x = "Run Number",
y = "Number of Learners",
fill = "Age Range") +
theme_minimal()
ggplot(data = top_countries_data, aes(x = factor(run_number), y = learner_count, fill = country)) +
geom_bar(position = "stack", stat = "identity") +
geom_text(aes(label = learner_count), position = position_stack(vjust = 0.5), size = 3, color = "black") +
labs(title = paste("Top", top_countries, "Countries by Learner Count in Each Run"),
x = "Run Number",
y = "Number of Learners",
fill = "Country") +
theme_minimal()
leaving_count = merged_leaving_data %>%
group_by(run_number) %>%
summarise(learners_left = n())
leaving_count
head(filtered_leaving_data)
ggplot(reason_freq, aes(x = run_number, y = leaving_reason, fill = count)) +
geom_tile() +
scale_fill_gradient(low = "lightblue", high = "darkblue") +
theme_classic()
ggplot(data = filtered_employee_data, aes(x = factor(run_number), fill = employment_status)) +
geom_bar(position = "dodge") +
labs(title = "Employment status of learners of each run",
x = "Run Number",
y = "Number of Learners",
fill = "Employment status") +
theme_bw()
